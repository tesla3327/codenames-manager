// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function makeCard($staropt$star, $staropt$star$1, _) {
  var word = $staropt$star ? $staropt$star[0] : "Default";
  var cardType = $staropt$star$1 ? $staropt$star$1[0] : /* Hidden */0;
  return /* record */[
          /* word */word,
          /* cardType */cardType
        ];
}

function make() {
  return Belt_Array.make(5, Belt_Array.make(5, makeCard(/* None */0, /* None */0, /* () */0)));
}

function getNextCardType(cardType) {
  switch (cardType) {
    case 0 : 
        return /* Red */1;
    case 1 : 
        return /* Blue */2;
    case 2 : 
        return /* Neutral */3;
    case 3 : 
        return /* Assassin */4;
    case 4 : 
        return /* Hidden */0;
    
  }
}

function cycleCardType(board, word) {
  return Belt_Array.map(board, (function (row) {
                return Belt_Array.map(row, (function (card) {
                              if (card[/* word */0] === word) {
                                return makeCard(/* Some */[card[/* word */0]], /* Some */[getNextCardType(card[/* cardType */1])], /* () */0);
                              } else {
                                return card;
                              }
                            }));
              }));
}

function make_with_words(words) {
  var getRow = function (num) {
    var __x = Belt_Array.range(Caml_int32.imul(num, 5), Caml_int32.imul(num, 5) + 4 | 0);
    return Belt_Array.map(__x, (function (index) {
                  var match = Belt_Array.get(words, index);
                  if (match) {
                    return makeCard(/* Some */[match[0]], /* None */0, /* () */0);
                  } else {
                    return makeCard(/* None */0, /* None */0, /* () */0);
                  }
                }));
  };
  var __x = Belt_Array.range(0, 4);
  return Belt_Array.map(__x, getRow);
}

exports.makeCard = makeCard;
exports.make = make;
exports.getNextCardType = getNextCardType;
exports.cycleCardType = cycleCardType;
exports.make_with_words = make_with_words;
/* No side effect */
