// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function makeCard($staropt$star, $staropt$star$1, id) {
  var word = $staropt$star ? $staropt$star[0] : "";
  var cardType = $staropt$star$1 ? $staropt$star$1[0] : /* Hidden */0;
  return /* record */[
          /* id */id,
          /* word */word,
          /* cardType */cardType
        ];
}

function getNextCardType(cardType) {
  switch (cardType) {
    case 0 : 
        return /* Red */1;
    case 1 : 
        return /* Blue */2;
    case 2 : 
        return /* Neutral */3;
    case 3 : 
        return /* Assassin */4;
    case 4 : 
        return /* Hidden */0;
    
  }
}

function updateCards(func, board) {
  return Belt_Array.map(board, (function (row) {
                return Belt_Array.map(row, func);
              }));
}

function cycleCardType(board, id) {
  return updateCards((function (card) {
                if (card[/* id */0] === id) {
                  return makeCard(/* Some */[card[/* word */1]], /* Some */[getNextCardType(card[/* cardType */2])], card[/* id */0]);
                } else {
                  return card;
                }
              }), board);
}

function getId(row, col) {
  return String(row) + String(col);
}

function make_with_words(words) {
  return Belt_Array.map(Belt_Array.range(0, 4), (function (row) {
                return Belt_Array.map(Belt_Array.range(0, 4), (function (col) {
                              var index = Caml_int32.imul(row, 5) + col | 0;
                              var id = getId(row, col);
                              if (words.length > index) {
                                return makeCard(/* Some */[Caml_array.caml_array_get(words, index)], /* None */0, id);
                              } else {
                                return makeCard(/* None */0, /* None */0, id);
                              }
                            }));
              }));
}

exports.makeCard = makeCard;
exports.getNextCardType = getNextCardType;
exports.updateCards = updateCards;
exports.cycleCardType = cycleCardType;
exports.getId = getId;
exports.make_with_words = make_with_words;
/* No side effect */
