// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Http = require("http");
var Curry = require("bs-platform/lib/js/curry.js");
var Express = require("bs-express/src/Express.js");
var SocketIo = require("socket.io");
var Board$ReactTemplate = require("./Board.bs.js");
var SocketIO$ReactTemplate = require("./SocketIO.bs.js");
var CodenamesSocket$ReactTemplate = require("./CodenamesSocket.bs.js");

var Http$1 = /* module */[];

var app = Express.express(/* () */0);

var http = Http.Server(app);

Curry._3(Express.App[/* get */4], app, "/hello", Express.Middleware[/* from */5]((function (_, _$1) {
            var partial_arg = Express.Response[/* sendString */2];
            return (function (param) {
                return partial_arg("hello!!!", param);
              });
          })));

var dirname = typeof (__dirname) === "undefined" ? undefined : (__dirname);

var publicDir = dirname !== undefined ? dirname + "/../build" : "./build";

Curry._2(Express.App[/* use */0], app, Express.Static[/* asMiddleware */4](Express.Static[/* make */3](publicDir, Express.Static[/* defaultOptions */0](/* () */0))));

var SocketServer = SocketIO$ReactTemplate.Server[/* Make */0](/* CodenamesSocket-ReactTemplate */[CodenamesSocket$ReactTemplate.stringify]);

var io = SocketIo(http);

var words = /* array */[
  "Date",
  "France",
  "Net",
  "Diamond",
  "Pass",
  "Knight",
  "Cross",
  "Tie",
  "Court",
  "Cotton",
  "Point",
  "Card",
  "Duck",
  "Star",
  "Slip",
  "Fighter",
  "Bridge",
  "Band",
  "Hood",
  "Olive",
  "Shop",
  "Match",
  "Ball",
  "Bow",
  "Mercury"
];

function make(board_) {
  return /* record */[/* board */board_];
}

var State = /* module */[/* make */make];

var state = [/* record */[/* board */Board$ReactTemplate.make_with_words(words)]];

function reduce(state, action, data) {
  switch (action) {
    case 0 : 
        return /* record */[/* board */Board$ReactTemplate.updateCard(state[/* board */0], data)];
    case 1 : 
        return /* record */[/* board */Board$ReactTemplate.toggleRevealed(state[/* board */0], data)];
    case 2 : 
        return state;
    
  }
}

Curry._2(SocketServer[/* onConnect */2], io, (function (socket) {
        Curry._3(SocketServer[/* Socket */1][/* emit */1], socket, /* UpdateBoard */2, state[0][/* board */0]);
        var update = function (action, data) {
          state[0] = reduce(state[0], action, data);
          return Curry._3(SocketServer[/* emit */0], io, /* UpdateBoard */2, state[0][/* board */0]);
        };
        Curry._3(SocketServer[/* Socket */1][/* on */0], socket, /* UpdateCard */0, (function (param) {
                return update(/* UpdateCard */0, param);
              }));
        return Curry._3(SocketServer[/* Socket */1][/* on */0], socket, /* ToggleRevealed */1, (function (param) {
                      return update(/* ToggleRevealed */1, param);
                    }));
      }));

function onListen() {
  console.log("Listening at http://localhost:" + String(3333));
  return /* () */0;
}

http.listen(3333, onListen);

var port = 3333;

var dirname$1 = dirname === undefined ? /* None */0 : [dirname];

exports.Http = Http$1;
exports.port = port;
exports.app = app;
exports.http = http;
exports.dirname = dirname$1;
exports.publicDir = publicDir;
exports.SocketServer = SocketServer;
exports.io = io;
exports.words = words;
exports.State = State;
exports.state = state;
exports.reduce = reduce;
exports.onListen = onListen;
/* app Not a pure module */
