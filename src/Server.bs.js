// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Http = require("http");
var Curry = require("bs-platform/lib/js/curry.js");
var Express = require("bs-express/src/Express.js");
var SocketIo = require("socket.io");
var SocketIO$ReactTemplate = require("./SocketIO.bs.js");
var SocketCommon$ReactTemplate = require("./SocketCommon.bs.js");

var Http$1 = /* module */[];

var app = Express.express(/* () */0);

var http = Http.Server(app);

Curry._3(Express.App[/* get */4], app, "/hello", Express.Middleware[/* from */5]((function (_, _$1) {
            var partial_arg = Express.Response[/* sendString */2];
            return (function (param) {
                return partial_arg("hello!!!", param);
              });
          })));

var dirname = typeof (__dirname) === "undefined" ? undefined : (__dirname);

var publicDir = dirname !== undefined ? dirname + "/../build" : "./build";

Curry._2(Express.App[/* use */0], app, Express.Static[/* asMiddleware */4](Express.Static[/* make */3](publicDir, Express.Static[/* defaultOptions */0](/* () */0))));

var SocketServer = SocketIO$ReactTemplate.Server[/* Make */0](/* SocketCommon-ReactTemplate */[SocketCommon$ReactTemplate.stringify]);

var io = SocketIo(http);

Curry._2(SocketServer[/* onConnect */2], io, (function (socket) {
        console.log("New connection");
        return Curry._3(SocketServer[/* Socket */1][/* on */0], socket, /* Message */0, (function (obj) {
                      console.log(obj);
                      return /* () */0;
                    }));
      }));

function onListen() {
  console.log("Listening at http://localhost:" + String(3333));
  return /* () */0;
}

http.listen(3333, onListen);

var port = 3333;

var dirname$1 = dirname === undefined ? /* None */0 : [dirname];

exports.Http = Http$1;
exports.port = port;
exports.app = app;
exports.http = http;
exports.dirname = dirname$1;
exports.publicDir = publicDir;
exports.SocketServer = SocketServer;
exports.io = io;
exports.onListen = onListen;
/* app Not a pure module */
