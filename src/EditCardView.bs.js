// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Board$ReactTemplate = require("./Board.bs.js");

var component = ReasonReact.reducerComponent("EditCardView");

function make(card, handleUpdateCard, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          className: "edit " + Board$ReactTemplate.getClasses(self[/* state */2][/* cardState */0])
                        }, React.createElement("form", undefined, React.createElement("input", {
                                  placeholder: "Enter word",
                                  value: self[/* state */2][/* cardState */0][/* word */1],
                                  onChange: (function (e) {
                                      var target = e.target;
                                      return Curry._1(self[/* send */4], /* ChangeWord */Block.__(0, [target.value]));
                                    })
                                }), React.createElement("select", {
                                  value: Board$ReactTemplate.cardTypeToString(self[/* state */2][/* cardState */0][/* cardType */3]),
                                  onChange: (function (e) {
                                      var target = e.target;
                                      return Curry._1(self[/* send */4], /* ChangeType */Block.__(1, [Board$ReactTemplate.stringToCardType(target.value)]));
                                    })
                                }, React.createElement("option", {
                                      value: "neutral"
                                    }, "Neutral"), React.createElement("option", {
                                      value: "red"
                                    }, "Red"), React.createElement("option", {
                                      value: "blue"
                                    }, "Blue"), React.createElement("option", {
                                      value: "assassin"
                                    }, "Assassin")), React.createElement("button", {
                                  className: "save",
                                  type: "submit",
                                  onClick: (function () {
                                      return Curry._1(handleUpdateCard, self[/* state */2][/* cardState */0]);
                                    })
                                }, "Save")));
            }),
          /* initialState */(function () {
              return /* record */[/* cardState */card];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action.tag) {
                var init = state[/* cardState */0];
                return /* Update */Block.__(0, [/* record */[/* cardState : record */[
                              /* id */init[/* id */0],
                              /* word */init[/* word */1],
                              /* revealed */init[/* revealed */2],
                              /* cardType */action[0]
                            ]]]);
              } else {
                var init$1 = state[/* cardState */0];
                return /* Update */Block.__(0, [/* record */[/* cardState : record */[
                              /* id */init$1[/* id */0],
                              /* word */action[0],
                              /* revealed */init$1[/* revealed */2],
                              /* cardType */init$1[/* cardType */3]
                            ]]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
