// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Board$ReactTemplate = require("./Board.bs.js");
var CardView$ReactTemplate = require("./CardView.bs.js");
var EditCardView$ReactTemplate = require("./EditCardView.bs.js");
var EmptyCardView$ReactTemplate = require("./EmptyCardView.bs.js");

var component = ReasonReact.reducerComponent("BoardView");

function renderCard(toggleRevealed, editCard, updateCard, mode, card) {
  var exit = 0;
  if (mode && mode[0] === card[/* id */0]) {
    return ReasonReact.element(/* Some */[card[/* id */0]], /* None */0, EditCardView$ReactTemplate.make(card, updateCard, /* array */[]));
  } else {
    exit = 1;
  }
  if (exit === 1) {
    var match = +(card[/* word */1] === "");
    if (match !== 0) {
      return ReasonReact.element(/* Some */[card[/* id */0]], /* None */0, EmptyCardView$ReactTemplate.make(editCard, card, /* array */[]));
    } else {
      return ReasonReact.element(/* Some */[card[/* id */0]], /* None */0, CardView$ReactTemplate.make(toggleRevealed, editCard, card, /* array */[]));
    }
  }
  
}

function make(words, _) {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      console.log(self[/* state */2][/* board */0]);
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (self) {
      var __x = Belt_Array.concatMany(self[/* state */2][/* board */0]);
      var partial_arg = self[/* state */2][/* mode */1];
      return React.createElement("div", {
                  className: "board-view"
                }, Belt_Array.map(__x, (function (param) {
                        return renderCard((function (id) {
                                      return Curry._1(self[/* send */4], /* ToggleRevealed */Block.__(2, [id]));
                                    }), (function (id) {
                                      return Curry._1(self[/* send */4], /* EditCard */Block.__(1, [id]));
                                    }), (function (card) {
                                      return Curry._1(self[/* send */4], /* UpdateCard */Block.__(0, [card]));
                                    }), partial_arg, param);
                      })));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* board */Board$ReactTemplate.make_with_words(words),
              /* mode : View */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      switch (action.tag | 0) {
        case 0 : 
            var card = action[0];
            return /* Update */Block.__(0, [/* record */[
                        /* board */Board$ReactTemplate.updateCards((function (card_) {
                                if (card_[/* id */0] === card[/* id */0]) {
                                  return Board$ReactTemplate.makeCard(/* Some */[card[/* word */1]], /* Some */[card[/* cardType */3]], /* None */0, card[/* id */0]);
                                } else {
                                  return card_;
                                }
                              }), state[/* board */0]),
                        /* mode : View */0
                      ]]);
        case 1 : 
            return /* Update */Block.__(0, [/* record */[
                        /* board */state[/* board */0],
                        /* mode : Editing */[action[0]]
                      ]]);
        case 2 : 
            return /* Update */Block.__(0, [/* record */[
                        /* board */Board$ReactTemplate.toggleRevealed(state[/* board */0], action[0]),
                        /* mode */state[/* mode */1]
                      ]]);
        
      }
    });
  return newrecord;
}

exports.component = component;
exports.renderCard = renderCard;
exports.make = make;
/* component Not a pure module */
